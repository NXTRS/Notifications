server:
    port: 8081
spring:
    application:
        name: NotificationService

    graphql:
        websocket.path: /subscription
        path: /graphql
        graphiql.enabled: true

    datasource:
        url: jdbc:postgresql://localhost:5432/notificationsdb
        username: postgres
        password: root

    data:
        redis:
            host: localhost
            port: 6379

    jpa:
        generate-ddl: true
        database-platform: org.hibernate.dialect.PostgreSQLDialect
        show-sql: true

    kafka:
        enabled: true
        bootstrap-servers: 127.0.0.1:9092
        topic: my-kafka-topic
        consumer:
            key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
            value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
            auto-offset-reset: latest
            group-id: my-kafka-group

    security.oauth2:
                client:
                    registration:
                        keycloak:
                            client-id: luciantestclient
                            authorization-grant-type: authorization_code
                            scope: openid
                    provider:
                        keycloak:
                            issuer-uri: http://localhost:8082/realms/NotificationRealm
                            user-name-attribute: preferred_username
                resourceserver:
                    jwt:
                        issuer-uri: http://localhost:8082/realms/NotificationRealm
                        jwk-set-uri: ${spring.security.oauth2.resourceserver.jwt.issuer-uri}/protocol/openid-connect/certs